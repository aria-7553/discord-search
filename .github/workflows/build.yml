name: Upload Release

on:
  push:
    tags:
    - 'v*'
  workflow_dispatch:


jobs:
  windows-build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ${{ github.ref }} on macOS
      run: |
        cargo build --release
        cd target/release/
        rename ${{ github.event.repository.name }}.exe ${{ github.event.repository.name }}-windows-64-bit.exe
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} Windows 64-bit
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}-windows-64-bit.exe
        asset_name: ${{ github.event.repository.name }}-windows-64-bit.exe
        asset_content_type: application/bin
        
  macos-build:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ${{ github.ref }} on macOS
      run: |
        cargo build --release
        cd target/release/
        mv ${{ github.event.repository.name }} ${{ github.event.repository.name }}-macos-64-bit
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} macOS 64-bit
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}-macos-64-bit
        asset_name: ${{ github.event.repository.name }}-macos-64-bit
        asset_content_type: application/bin
        
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ${{ github.ref }} on macOS
      run: |
        cargo build --release
        cd target/release/
        mv ${{ github.event.repository.name }} ${{ github.event.repository.name }}-linux-64-bit
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} Linux 64-bit
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}-linux-64-bit
        asset_name: ${{ github.event.repository.name }}-linux-64-bit
        asset_content_type: application/bin
